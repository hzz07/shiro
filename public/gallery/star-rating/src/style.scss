body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: #222;
}

.rating {
  display: flex;
  flex-direction: row-reverse;

  input {
    opacity: 0;
    appearance: none;

    // fill the checked element and all its previous siblings
    &:checked ~ label::before {
      opacity: 1;
    }
  }

  label {
    position: relative;
    margin-right: 6px;
    cursor: pointer;
    transition: 0.5s;

    &:hover {
      transform: scale(1.2);
    }

    &::before {
      position: absolute;
      content: url("data:image/svg+xml,%3Csvg t='1580197123080' class='icon' viewBox='0 0 1024 1024' version='1.1' xmlns='http://www.w3.org/2000/svg' p-id='7739' width='90' height='90'%3E%3Cpath d='M512 96c3.808 0 7.584 2.176 8.992 6.56l129.664 270.784 288.736 33.184c9.216 0 13.024 11.744 5.6 17.152L720 616l65.184 299.52a9.536 9.536 0 0 1-9.056 12.48 9.344 9.344 0 0 1-5.536-1.856L512 772.928l-258.592 153.216a9.344 9.344 0 0 1-5.536 1.856 9.536 9.536 0 0 1-9.056-12.48L304 616l-224.992-192.32a9.472 9.472 0 0 1 5.6-17.152l288.736-33.184 129.632-270.784A9.312 9.312 0 0 1 512 96' fill='gold' p-id='7740'%3E%3C/path%3E%3C/svg%3E");
      opacity: 0;
      transition: 0.5s;
    }

    // fill the hovered element and all its previous siblings
    &:hover::before,
    &:hover ~ label::before {
      opacity: 1 !important;
    }
  }

  // when pointer re-enters the checked element, checked element and its siblings became transparent.
  &:hover input:checked ~ label::before {
    opacity: 0;
  }
}
